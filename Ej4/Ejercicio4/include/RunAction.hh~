#ifdef RunAction_h
#define RunAction_h 1

#include "G4UserRunAction.hh"
#include "SecondaryInfo.hh"
#include <vector>
#include <map>

class RunAction : public G4UserRunAction{
public :
  RunAction() = default;
  ~RunAction() override = default;

  void BeginOfRunAction(const Run*) override{
    fSecondaries.clear();

  }

  void EnfOfRunAction(const Run*) override{
    std::map<G4String,int> typeCount;
    for (auto& sec : fSecondaries) {
      typeCount[sec.name]++;
    }

    G4cout << "\n=== Secondary particle summary ===\n";
    for (auto& kv : typeCount) {
      G4cout << kv.first << " : " << kv.second << G4endl;
    }
  }

  void RecordSecondary(const G4String& name, G4double ekin,
		       const G4ThreeVector& pos, const G4ThreeVector& mom,
		       const G4String& process) {
        fSecondaries.push_back({name, ekin, pos, mom, process});
  }
  
}

private:
    std::vector<SecondaryInfo> fSecondaries;
  
#endif
